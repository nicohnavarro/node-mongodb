{
  "info": {
    "_postman_id": "30f5492f-267b-4377-a604-f65f384ce694",
    "name": "UsersTest",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Login",
      "item": [
        {
          "name": "Login - Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 800ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(800);",
                  "});",
                  "pm.test(\"Reponse is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('token');",
                  "    pm.expect(jsonData.data.token).to.be.an('string');",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "",
                  "    pm.collectionVariables.set(\"token\",jsonData.data.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "    {\n        \"email\":\"nicnonci@gmail.com\",\n        \"password\": \"123123\"\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{basepath}}/auth/login",
              "host": ["{{basepath}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Login - Invalid Request",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 200\", function () {",
                  "    pm.response.to.not.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "pm.test(\"Reponse is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData.error).to.have.property('message');",
                  "    pm.expect(jsonData.error.message).to.be.an('string');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "    {\n        \"email\":\"nicnoncigmail.com\",\n        \"password\": \"123123\"\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{basepath}}/auth/login",
              "host": ["{{basepath}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Login - Invalid Credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 200\", function () {",
                  "    pm.response.to.not.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 700ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(700);",
                  "});",
                  "pm.test(\"Response is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData.error).to.have.property('message');",
                  "    pm.expect(jsonData.error.message).to.be.an('string');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "    {\n        \"email\":\"nicnonci@gmail.com\",\n        \"password\": \"123\"\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{basepath}}/auth/login",
              "host": ["{{basepath}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Get All Users",
      "item": [
        {
          "name": "Get All - Complete Filters",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 700ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(700);",
                  "});",
                  "pm.test(\"Reponse is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('docs');",
                  "    pm.expect(jsonData.data.docs).to.be.an('array');",
                  "    pm.expect(jsonData.data).to.have.property('totalDocs');",
                  "    pm.expect(jsonData.data.totalDocs).to.be.an('number');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{basepath}}/users/pag?filter[name]=Nicolas&options[limit]=4&options[offset]=0",
              "host": ["{{basepath}}"],
              "path": ["users", "pag"],
              "query": [
                {
                  "key": "filter[name]",
                  "value": "Nicolas"
                },
                {
                  "key": "options[limit]",
                  "value": "4"
                },
                {
                  "key": "options[offset]",
                  "value": "0"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get All - Without Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "pm.test(\"Reponse is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData.error).to.have.property('message');",
                  "    pm.expect(jsonData.error.message).to.be.an('string');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{basepath}}/users/pag?filter[name]=Nicolas&options[limit]=4&options[offset]=0",
              "host": ["{{basepath}}"],
              "path": ["users", "pag"],
              "query": [
                {
                  "key": "filter[name]",
                  "value": "Nicolas"
                },
                {
                  "key": "options[limit]",
                  "value": "4"
                },
                {
                  "key": "options[offset]",
                  "value": "0"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Create User",
      "item": [
        {
          "name": "Create User - Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"randomNumber\",Math.random());",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 1200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1200);",
                  "});",
                  "pm.test(\"Reponse is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "    pm.expect(jsonData.data.email).to.be.an('string');",
                  "    pm.expect(jsonData.data).to.have.property('_id');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "",
                  "    pm.collectionVariables.set(\"userId\", jsonData.data._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "{{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\":\"Nicolas\",\n    \"lastName\":\"Rodriguez\",\n    \"email\":\"a1{{randomNumber}}@gmail.com\",\n    \"dateOfBirth\":\"10/02/1994\",\n    \"password\":\"123123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{basepath}}/users",
              "host": ["{{basepath}}"],
              "path": ["users"]
            }
          },
          "response": []
        },
        {
          "name": "Create User - Failure",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "",
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 200\", function () {",
                  "    pm.response.to.not.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "pm.test(\"Reponse is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData.error).to.have.property('message');",
                  "    pm.expect(jsonData.error.message).to.be.an('string');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "{{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\":\"Nicolas\",\n    \"lastName\":\"Rodriguez\",\n    \"email\":\"nicohnavarro@gmail.com\",\n    \"dateOfBirth\":\"10/02/1994\",\n    \"password\":\"123123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{basepath}}/users",
              "host": ["{{basepath}}"],
              "path": ["users"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Update User",
      "item": [
        {
          "name": "Update User - Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 1200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1200);",
                  "});",
                  "pm.test(\"Reponse is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "    pm.expect(jsonData.data.email).to.be.an('string');",
                  "    pm.expect(jsonData.data).to.have.property('_id');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\":\"Pruevba Put\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{basepath}}/users/{{userId}}",
              "host": ["{{basepath}}"],
              "path": ["users", "{{userId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update User - Failure",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "",
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 200\", function () {",
                  "    pm.response.to.not.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 500ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "pm.test(\"Reponse is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData.error).to.have.property('message');",
                  "    pm.expect(jsonData.error.message).to.be.an('string');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\":\"Nicolas\",\n    \"lastName\":\"Rodriguez\",\n    \"email\":\"nicohnavarro@gmail.com\",\n    \"dateOfBirth\":\"10/02/1994\",\n    \"password\":\"123123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{basepath}}/users/123",
              "host": ["{{basepath}}"],
              "path": ["users", "123"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Delete User",
      "item": [
        {
          "name": "Delete User - Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 1200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1200);",
                  "});",
                  "pm.test(\"Reponse is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "    pm.expect(jsonData.data.email).to.be.an('string');",
                  "    pm.expect(jsonData.data).to.have.property('_id');",
                  "    pm.expect(jsonData.data).to.have.property('role');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "{{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{basepath}}/users/{{userId}}",
              "host": ["{{basepath}}"],
              "path": ["users", "{{userId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete User - Failure",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 200\", function () {",
                  "    pm.response.to.not.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Status code is not 500\", function () {",
                  "    pm.response.to.not.have.status(500);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 900ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(900);",
                  "});",
                  "pm.test(\"Reponse is Json\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Response have correct properties\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('error');",
                  "    pm.expect(jsonData.error).to.have.property('message');",
                  "    pm.expect(jsonData.error.message).to.be.an('string');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "{{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{basepath}}/users/{{userId}}",
              "host": ["{{basepath}}"],
              "path": ["users", "{{userId}}"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "token",
      "value": ""
    },
    {
      "key": "randomNumer",
      "value": ""
    },
    {
      "key": "randomNumber",
      "value": ""
    },
    {
      "key": "userId",
      "value": ""
    }
  ]
}
